import { RenderComponent, UseContent, Context, FactoryParams } from '../types';
import { PropOptions } from 'vue';
export interface UseContentFactoryParams<CONTENT, CONTENT_SEARCH_PARAMS> extends FactoryParams {
    search: (context: Context, params: CONTENT_SEARCH_PARAMS) => Promise<CONTENT>;
}
export declare function useContentFactory<CONTENT, CONTENT_SEARCH_PARAMS>(factoryParams: UseContentFactoryParams<CONTENT, CONTENT_SEARCH_PARAMS>): (id: string) => UseContent<CONTENT, CONTENT_SEARCH_PARAMS>;
export declare type RenderContentFactoryParams<CONTENT = any> = {
    extractContent: (content: any) => CONTENT;
};
export declare function renderContentFactory(factoryParams: RenderContentFactoryParams<RenderComponent[]>): {
    render: (createElement: any) => any;
    props: {
        content: PropOptions<{} | []>;
    };
};
